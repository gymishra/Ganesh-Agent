{
  "iFlowMetadata": {
    "id": "3PL_to_SAP_InventoryAdjustment_v1.0",
    "name": "3PL to SAP Inventory Adjustment Integration",
    "description": "Integration flow for processing 3PL inventory adjustments and sending to SAP S/4HANA via IDOC",
    "version": "1.0.0",
    "author": "Q CLI SAP Integration",
    "createdDate": "2025-07-29",
    "lastModified": "2025-07-29",
    "status": "Active",
    "category": "Inventory Management",
    "tags": ["3PL", "SAP", "Inventory", "IDOC", "FSHGMCR01"]
  },
  
  "iFlowConfiguration": {
    "runtime": {
      "nodeType": "Cloud Integration",
      "runtimeProfile": "Standard",
      "memorySize": "1GB",
      "timeout": "300000",
      "retryCount": 3,
      "retryInterval": "PT30S"
    },
    
    "endpoints": {
      "sender": {
        "type": "HTTPS",
        "address": "/3pl/inventory/adjustments",
        "authentication": "Basic",
        "authorization": "RoleBased",
        "roles": ["ESBMessaging.send"],
        "contentType": "application/xml",
        "methods": ["POST"],
        "maxPayloadSize": "10MB"
      },
      
      "receiver": {
        "type": "IDOC",
        "system": "SAP_S4HANA",
        "idocType": "FSHGMCR01",
        "messageType": "FSHGMCR",
        "authentication": "BasicAuthentication",
        "connection": {
          "host": "${sap.host}",
          "port": "${sap.port}",
          "client": "${sap.client}",
          "systemNumber": "${sap.systemNumber}",
          "language": "EN"
        }
      }
    },
    
    "processingSteps": [
      {
        "stepId": "1",
        "stepName": "Receive 3PL Data",
        "stepType": "Start",
        "description": "Receive inventory adjustment data from 3PL system",
        "configuration": {
          "endpoint": "sender",
          "messageFormat": "XML",
          "validation": "enabled",
          "schema": "3PL_Inventory_Source.xsd"
        }
      },
      
      {
        "stepId": "2",
        "stepName": "Log Incoming Message",
        "stepType": "Script",
        "description": "Log incoming message for monitoring",
        "configuration": {
          "scriptType": "Groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message\nimport java.util.Date\n\ndef Message processData(Message message) {\n    def body = message.getBody(String)\n    def messageLog = messageLogFactory.getMessageLog(message)\n    messageLog.addAttachmentAsString(\"Incoming_3PL_Data_${new Date().format('yyyyMMdd_HHmmss')}.xml\", body, \"application/xml\")\n    messageLog.setStringProperty(\"ProcessingStep\", \"Received 3PL Data\")\n    messageLog.setStringProperty(\"Timestamp\", new Date().toString())\n    return message\n}"
        }
      },
      
      {
        "stepId": "3",
        "stepName": "Validate Input Data",
        "stepType": "Script",
        "description": "Validate incoming 3PL data structure and content",
        "configuration": {
          "scriptType": "Groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message\nimport groovy.xml.*\n\ndef Message processData(Message message) {\n    def body = message.getBody(String)\n    \n    try {\n        def xml = new XmlSlurper().parseText(body)\n        \n        // Validate required fields\n        if (!xml.Records.Record) {\n            throw new Exception(\"No records found in input data\")\n        }\n        \n        xml.Records.Record.each { record ->\n            if (!record.Elements.TransactionReference1.text()) {\n                throw new Exception(\"TransactionReference1 is required\")\n            }\n            if (!record.Elements.MaterialNumber.text()) {\n                throw new Exception(\"MaterialNumber is required\")\n            }\n            if (!record.Elements.Quantity.text()) {\n                throw new Exception(\"Quantity is required\")\n            }\n        }\n        \n        message.setProperty(\"ValidationStatus\", \"PASSED\")\n        message.setProperty(\"RecordCount\", xml.Records.Record.size().toString())\n        \n    } catch (Exception e) {\n        message.setProperty(\"ValidationStatus\", \"FAILED\")\n        message.setProperty(\"ValidationError\", e.getMessage())\n        throw new Exception(\"Validation failed: ${e.getMessage()}\")\n    }\n    \n    return message\n}"
        }
      },
      
      {
        "stepId": "4",
        "stepName": "Transform to SAP IDOC",
        "stepType": "MessageMapping",
        "description": "Transform 3PL data to SAP IDOC FSHGMCR01 format",
        "configuration": {
          "mappingName": "3PL_to_SAP_MessageMapping.xml",
          "sourceSchema": "3PL_Inventory_Source.xsd",
          "targetSchema": "SAP_FSHGMCR01_Target.xsd",
          "mappingType": "MessageMapping"
        }
      },
      
      {
        "stepId": "5",
        "stepName": "Apply Business Logic",
        "stepType": "Script",
        "description": "Apply additional business logic and transformations",
        "configuration": {
          "scriptType": "Groovy",
          "scriptFile": "InventoryAdjustmentMapping.groovy"
        }
      },
      
      {
        "stepId": "6",
        "stepName": "Enrich IDOC Header",
        "stepType": "Script",
        "description": "Enrich IDOC with additional header information",
        "configuration": {
          "scriptType": "Groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message\nimport groovy.xml.*\nimport java.text.SimpleDateFormat\nimport java.util.Date\n\ndef Message processData(Message message) {\n    def body = message.getBody(String)\n    def xml = new XmlSlurper().parseText(body)\n    \n    // Add processing timestamp\n    message.setProperty(\"ProcessingTimestamp\", new Date().toString())\n    message.setProperty(\"IDOCType\", \"FSHGMCR01\")\n    message.setProperty(\"MessageType\", \"FSHGMCR\")\n    \n    return message\n}"
        }
      },
      
      {
        "stepId": "7",
        "stepName": "Log Transformed Message",
        "stepType": "Script",
        "description": "Log transformed IDOC for monitoring",
        "configuration": {
          "scriptType": "Groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message\nimport java.util.Date\n\ndef Message processData(Message message) {\n    def body = message.getBody(String)\n    def messageLog = messageLogFactory.getMessageLog(message)\n    messageLog.addAttachmentAsString(\"Transformed_IDOC_${new Date().format('yyyyMMdd_HHmmss')}.xml\", body, \"application/xml\")\n    messageLog.setStringProperty(\"ProcessingStep\", \"Transformed to IDOC\")\n    messageLog.setStringProperty(\"IDOCType\", message.getProperty(\"IDOCType\"))\n    return message\n}"
        }
      },
      
      {
        "stepId": "8",
        "stepName": "Send to SAP S/4HANA",
        "stepType": "Send",
        "description": "Send IDOC to SAP S/4HANA system",
        "configuration": {
          "endpoint": "receiver",
          "messageFormat": "IDOC",
          "deliveryMode": "Synchronous",
          "timeout": "60000",
          "retryOnError": true,
          "maxRetries": 3
        }
      },
      
      {
        "stepId": "9",
        "stepName": "Process Response",
        "stepType": "Script",
        "description": "Process SAP response and create acknowledgment",
        "configuration": {
          "scriptType": "Groovy",
          "script": "import com.sap.gateway.ip.core.customdev.util.Message\nimport groovy.xml.*\nimport java.util.Date\n\ndef Message processData(Message message) {\n    def body = message.getBody(String)\n    \n    // Create success response\n    def writer = new StringWriter()\n    def xml = new MarkupBuilder(writer)\n    \n    xml.ProcessingResult {\n        Status(\"SUCCESS\")\n        Timestamp(new Date().toString())\n        ProcessedRecords(message.getProperty(\"RecordCount\") ?: \"0\")\n        IDOCNumber(message.getProperty(\"IDOCNumber\") ?: \"\")\n        Message(\"Inventory adjustments processed successfully\")\n    }\n    \n    message.setBody(writer.toString())\n    message.setHeader(\"Content-Type\", \"application/xml\")\n    \n    return message\n}"
        }
      }
    ],
    
    "errorHandling": {
      "globalErrorHandler": {
        "enabled": true,
        "errorEndpoint": "/error/3pl-inventory",
        "notificationEmail": "integration-team@colehaan.com",
        "retryStrategy": "Exponential",
        "maxRetries": 3,
        "retryInterval": "PT30S"
      },
      
      "stepErrorHandlers": [
        {
          "stepId": "3",
          "errorType": "ValidationError",
          "action": "Stop",
          "notification": true,
          "customResponse": {
            "status": "VALIDATION_FAILED",
            "message": "Input data validation failed"
          }
        },
        
        {
          "stepId": "4",
          "errorType": "MappingError",
          "action": "Retry",
          "maxRetries": 2,
          "notification": true
        },
        
        {
          "stepId": "8",
          "errorType": "ConnectionError",
          "action": "Retry",
          "maxRetries": 3,
          "retryInterval": "PT60S",
          "notification": true
        }
      ]
    },
    
    "monitoring": {
      "messageProcessingLogs": {
        "enabled": true,
        "logLevel": "INFO",
        "retentionPeriod": "30 days"
      },
      
      "performanceMetrics": {
        "enabled": true,
        "metrics": [
          "ProcessingTime",
          "ThroughputPerHour",
          "ErrorRate",
          "SuccessRate"
        ]
      },
      
      "alerts": [
        {
          "name": "High Error Rate",
          "condition": "ErrorRate > 10%",
          "action": "SendEmail",
          "recipients": ["integration-team@colehaan.com"]
        },
        
        {
          "name": "Processing Delay",
          "condition": "ProcessingTime > 300 seconds",
          "action": "SendEmail",
          "recipients": ["integration-team@colehaan.com"]
        }
      ]
    },
    
    "security": {
      "authentication": {
        "inbound": {
          "type": "Basic",
          "users": ["3pl_system", "integration_user"],
          "roles": ["ESBMessaging.send"]
        },
        
        "outbound": {
          "type": "Basic",
          "credentialName": "SAP_S4HANA_Credentials",
          "user": "${sap.username}",
          "password": "${sap.password}"
        }
      },
      
      "encryption": {
        "inTransit": "TLS 1.2",
        "atRest": "AES-256"
      },
      
      "dataPrivacy": {
        "piiFields": [],
        "dataRetention": "90 days",
        "dataClassification": "Internal"
      }
    },
    
    "configuration": {
      "parameters": [
        {
          "name": "sap.host",
          "description": "SAP S/4HANA host",
          "type": "string",
          "required": true,
          "defaultValue": "sap-s4hana.colehaan.com"
        },
        
        {
          "name": "sap.port",
          "description": "SAP S/4HANA port",
          "type": "integer",
          "required": true,
          "defaultValue": "8000"
        },
        
        {
          "name": "sap.client",
          "description": "SAP client",
          "type": "string",
          "required": true,
          "defaultValue": "100"
        },
        
        {
          "name": "sap.systemNumber",
          "description": "SAP system number",
          "type": "string",
          "required": true,
          "defaultValue": "00"
        },
        
        {
          "name": "sap.username",
          "description": "SAP username",
          "type": "string",
          "required": true,
          "secure": true
        },
        
        {
          "name": "sap.password",
          "description": "SAP password",
          "type": "string",
          "required": true,
          "secure": true
        },
        
        {
          "name": "processing.batchSize",
          "description": "Batch size for processing records",
          "type": "integer",
          "required": false,
          "defaultValue": "100"
        },
        
        {
          "name": "retry.maxAttempts",
          "description": "Maximum retry attempts",
          "type": "integer",
          "required": false,
          "defaultValue": "3"
        }
      ]
    },
    
    "testing": {
      "testCases": [
        {
          "name": "Single Record Processing",
          "description": "Test processing of single inventory adjustment record",
          "inputFile": "test_single_record.xml",
          "expectedOutput": "expected_single_idoc.xml"
        },
        
        {
          "name": "Multiple Records Processing",
          "description": "Test processing of multiple inventory adjustment records",
          "inputFile": "test_multiple_records.xml",
          "expectedOutput": "expected_multiple_idocs.xml"
        },
        
        {
          "name": "Error Handling",
          "description": "Test error handling for invalid data",
          "inputFile": "test_invalid_data.xml",
          "expectedError": "ValidationError"
        }
      ]
    },
    
    "deployment": {
      "environments": [
        {
          "name": "Development",
          "tenant": "dev-colehaan",
          "parameters": {
            "sap.host": "dev-sap.colehaan.com",
            "processing.batchSize": "10"
          }
        },
        
        {
          "name": "Test",
          "tenant": "test-colehaan",
          "parameters": {
            "sap.host": "test-sap.colehaan.com",
            "processing.batchSize": "50"
          }
        },
        
        {
          "name": "Production",
          "tenant": "prod-colehaan",
          "parameters": {
            "sap.host": "prod-sap.colehaan.com",
            "processing.batchSize": "100"
          }
        }
      ]
    }
  }
}
